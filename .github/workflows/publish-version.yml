name: Publish package version

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  get-current-version:
    name: Get current package version
    runs-on: ubuntu-latest
    outputs:
      doTag: ${{ steps.checkTag.outputs.doTag }}
      newVersion: ${{ steps.checkTag.outputs.newVersion }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 24.x
        uses: actions/setup-node@v5
        with:
          node-version: 24.x

      - name: Install Yarn
        run: npm install -g yarn

      - name: Check current tag
        id: checkTag
        run: |
          VERSION=$(yarn run env | grep npm_package_version | awk -F ': ' '{print $2}' | tr -d '",')
          echo "newVersion=v$VERSION" >> $GITHUB_OUTPUT

          git fetch --tags
          if [ $(git tag -l v$VERSION) ]; then
            echo "Version is up to date at v$VERSION"
            echo "doTag=false" >> $GITHUB_OUTPUT
          else
            echo "Version needs to be updated to v$VERSION"
            echo "doTag=true" >> $GITHUB_OUTPUT
          fi

  make-tag:
    name: Create a new tag
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - get-current-version
    if: ${{ needs.get-current-version.outputs.doTag == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Push the new tag
        run: |
          git config --global user.name "DiamondLightSource-build-server"
          git config --global user.email "DiamondLightSource-build-server@users.noreply.github.com"
          git config credential.helper "store --file=.git/credentials"
          echo "https://${GITHUB_TOKEN}:@github.com" > .git/credentials

          git tag ${{ needs.get-current-version.outputs.newVersion }}
          git push origin ${{ needs.get-current-version.outputs.newVersion }}
